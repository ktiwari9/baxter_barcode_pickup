#include <rosbag/bag.h>
#include <rosbag/view.h>

#include <sensor_msgs/Image.h>
#include <sensor_msgs/CameraInfo.h>
#include <sensor_msgs/PointCloud2.h>

#include <cv_bridge/CvBridge.h>

#include <ros/ros.h>

#include <opencv2/core/core_c.h>
#include <opencv/cv.h>
#include <opencv/highgui.h>
#include <opencv/cvwimage.h>

int main(int argc, char ** argv)
{
  printf("INFO: usage = video_to_bag <bagname> <videoname>\n");
  assert( argc == 3 );
  printf("INFO: starting conversion\n");

  rosbag::Bag bag;
  bag.open(argv[1], rosbag::bagmode::Write);
   
  CvCapture* capture = cvCaptureFromAVI(argv[2]);
  if( !capture )
  {
    printf("ERROR: could not correctly open capture: %s\n", argv[2]);
    exit(0);  
  }
  
  int fps = ( int )cvGetCaptureProperty( capture, CV_CAP_PROP_FPS );
  printf("INFO: got fps of: %d, or %lf incrementation\n", fps,(double) 1/fps);

  ros::Time time((double) 1/fps);

  IplImage* img = 0; 
  while(1)
  {
    if(!cvGrabFrame(capture)){              // capture a frame 
      printf("ERROR: Could not grab a frame, perhaps we're at the end of the movie\n\7");
      cvReleaseCapture(&capture);
      bag.close();
      exit(0);
    }

    img=cvRetrieveFrame(capture);           // retrieve the captured frame
    
    sensor_msgs::ImagePtr msg = sensor_msgs::CvBridge::cvToImgMsg(img, "bgr8");
    
    bag.write("image", time, msg);
    time = time + ros::Duration((double) 1/fps); // get the time in the bag file correct
  }
  
  cvReleaseCapture(&capture);
  bag.close();
}
